
# NOTE: this file is automatically generated

from iommi import *
from iommi.admin import Admin
from iommi.struct import Struct
from django.urls import (
    include,
    path,
)
import pytest
from django.db import models
from tests.helpers import req, user_req, staff_req, show_output
from docs.models import *

pytestmark = pytest.mark.django_db

@pytest.fixture(autouse=True)
def auto_use(big_discography):
    pass

request = req('get')


# language=rst
"""
    
Traversable
===========

Base class: `RefinableObject`

"""
def test_base():
    # language=rst
    """
Abstract API for objects that have a place in the iommi path structure.
You should not need to care about this class as it is an implementation
detail.

    """

    # language=rst
    """

Refinable members
-----------------


`extra_params`
^^^^^^^^^^^^^^

    See :ref:`extra_params <extra_params>`


`iommi_style`
^^^^^^^^^^^^^

Type: `str`

    See :ref:`iommi_style <iommi_style>`


Methods
-------

`apply_style`
^^^^^^^^^^^^^

`bind`
^^^^^^

`get_context`
^^^^^^^^^^^^^

`get_request`
^^^^^^^^^^^^^

`invoke_callback`
^^^^^^^^^^^^^^^^^

`iommi_bound_members`
^^^^^^^^^^^^^^^^^^^^^

`iommi_evaluate_parameters`
^^^^^^^^^^^^^^^^^^^^^^^^^^^

`iommi_name`
^^^^^^^^^^^^

`iommi_parent`
^^^^^^^^^^^^^^

`iommi_root`
^^^^^^^^^^^^

`on_bind`
^^^^^^^^^

`on_refine_done`
^^^^^^^^^^^^^^^^

`own_evaluate_parameters`
^^^^^^^^^^^^^^^^^^^^^^^^^

    """
